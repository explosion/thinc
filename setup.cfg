[metadata]
description = A refreshing functional take on deep learning, compatible with your favorite libraries
url = https://github.com/explosion/thinc
author = Explosion
author_email = contact@explosion.ai
license = MIT
long_description = file: README.md
long_description_content_type = text/markdown
classifiers =
    Development Status :: 5 - Production/Stable
    Environment :: Console
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Operating System :: POSIX :: Linux
    Operating System :: MacOS :: MacOS X
    Operating System :: Microsoft :: Windows
    Programming Language :: Cython
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Topic :: Scientific/Engineering

[options]
zip_safe = false
include_package_data = true
python_requires = >=3.6
setup_requires =
    wheel
    cython>=0.25
    numpy>=1.7.0
    # We also need our Cython packages here to compile against
    cymem>=2.0.2,<2.1.0
    preshed>=3.0.2,<3.1.0
    murmurhash>=0.28.0,<1.1.0
install_requires =
    # Explosion-provided dependencies
    murmurhash>=0.28.0,<1.1.0
    cymem>=2.0.2,<2.1.0
    preshed>=3.0.2,<3.1.0
    wasabi>=0.4.0,<1.1.0
    srsly>=2.0.0,<3.0.0
    catalogue>=0.2.0,<3.0.0
    # Third-party dependencies
    setuptools
    numpy>=1.7.0
    pydantic>=1.4.0,<2.0.0
    # Backports of modern Python features
    dataclasses>=0.6,<1.0; python_version < "3.7"
    typing_extensions>=3.7.4.1,<4.0.0.0; python_version < "3.8"
    contextvars>=2.4,<3; python_version < "3.7"

[options.extras_require]
cuda =
    cupy>=5.0.0b4
cuda80 =
    cupy-cuda80>=5.0.0b4
cuda90 =
    cupy-cuda90>=5.0.0b4
cuda91 =
    cupy-cuda91>=5.0.0b4
cuda92 =
    cupy-cuda92>=5.0.0b4
cuda100 =
    cupy-cuda100>=5.0.0b4
cuda101 =
    cupy-cuda101>=5.0.0b4
datasets =
    ml_datasets>=0.1.5
blis =
    blis>=0.4.0,<0.5.0
torch =
    torch>=1.0.0,<1.4.0
tensorflow =
    tensorflow>=2.0.0,<2.3.0
jax =
    jax>=0.1.57
    jaxlib>=0.1.37
mxnet =
    mxnet>=1.5.1,<1.6.0

[bdist_wheel]
universal = false

[sdist]
formats = gztar

[flake8]
ignore = E203, E266, E501, E731, W503, E741
max-line-length = 80
select = B,C,E,F,W,T4,B9
exclude =
    thinc/__init__.py
    thinc/layers/__init__.py
    thinc/shims/__init__.py
    thinc/api.py
    thinc/types.py
    thinc/tests/mypy

[tool:pytest]
markers =
    slow

[coverage:run]
plugins = Cython.Coverage
omit =
    **/tests/*
    thinc/types.py
    thinc/backends/cupy_ops.py
    thinc/backends/_custom_kernels.py
    thinc/backends/_cupy_allocators.py
    thinc/layers/staticvectors.py

[coverage:report]
show_missing = True
exclude_lines =
    pragma: no cover
    # Don't complain about missing debug-only code:
    def __unicode__
    def __repr__
    if self\.debug
    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError
    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:
    assert False

[mypy]
ignore_missing_imports = True
no_implicit_optional = True
plugins = pydantic.mypy, thinc.mypy

[mypy-thinc.tests.mypy.*]
ignore_errors = True
