[metadata]
description = Practical Machine Learning for NLP
url = https://github.com/explosion/thinc
author = Explosion
author_email = contact@explosion.ai
license = MIT
long_description = file: README.md
long_description_content_type = text/markdown
classifiers =
    Development Status :: 5 - Production/Stable
    Environment :: Console
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Operating System :: POSIX :: Linux
    Operating System :: MacOS :: MacOS X
    Operating System :: Microsoft :: Windows
    Programming Language :: Cython
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Topic :: Scientific/Engineering

[options]
zip_safe = false
include_package_data = true
python_requires = >=3.6
setup_requires =
    wheel
    cython>=0.25
    numpy>=1.7.0
    # We also need our Cython packages here to compile against
    cymem>=2.0.2,<2.1.0
    preshed>=3.0.2,<3.1.0
    murmurhash>=0.28.0,<1.1.0
    blis>=0.4.0,<0.5.0
install_requires =
    # Our libraries
    murmurhash>=0.28.0,<1.1.0
    cymem>=2.0.2,<2.1.0
    preshed>=3.0.2,<3.1.0
    blis>=0.4.0,<0.5.0
    wasabi>=0.4.0,<1.1.0
    srsly>=0.1.0,<1.1.0
    catalogue>=0.0.7,<1.1.0
    # Third-party dependencies
    setuptools
    numpy>=1.7.0
    plac>=0.9.6,<1.2.0
    tqdm>=4.10.0,<5.0.0
    pydantic>=1.3.0,<2.0.0

[options.extras_require]
cuda =
    cupy>=5.0.0b4
cuda80 =
    cupy-cuda80>=5.0.0b4
cuda90 =
    cupy-cuda90>=5.0.0b4
cuda91 =
    cupy-cuda91>=5.0.0b4
cuda92 =
    cupy-cuda92>=5.0.0b4
cuda100 =
    cupy-cuda100>=5.0.0b4
cuda101 =
    cupy-cuda101>=5.0.0b4

[bdist_wheel]
universal = false

[sdist]
formats = gztar

[flake8]
ignore = E203, E266, E501, E731, W503, E741
max-line-length = 80
select = B,C,E,F,W,T4,B9
exclude =
    thinc/extra/_vendorized

[tool:pytest]
markers =
    slow

[coverage:run]
plugins = Cython.Coverage
omit =
    **/tests/*
    **/_vendorized/*
exclude_lines =
    pragma: no cover
    # Don't complain about missing debug-only code:
    def __unicode__
    def __repr__
    if self\.debug
    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError
    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

[coverage:report]
show_missing = True
