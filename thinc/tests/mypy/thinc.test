[case test_mypy_model_forward_inference]
from typing import Union, Callable, Tuple, TypeVar
from thinc.model import Model
from thinc.layers import Linear
from thinc.types import Floats2d, Array
from thinc.backends import get_current_ops, Ops

ModelDim = TypeVar("ModelDim", bound=Array)
ModelBwd = Callable[[ModelDim], ModelDim]
ModelFwd = Tuple[ModelDim, ModelBwd[ModelDim]]

ops: Ops = get_current_ops()

example = ops.alloc_f2d(1, 12)
Y = ops.alloc_f2d(1, 1)
model = Linear(12)

def forward(model: Model, X: Floats2d, is_train: bool) -> ModelFwd[Floats2d]:
    def backprop(dY: Floats2d) -> Floats2d:
        pass

    return Y, backprop


reveal_type(forward(model, example, False))  # N: Revealed type is 'Tuple[thinc.types.Floats2d, def (thinc.types.Floats2d) -> thinc.types.Floats2d]'
[out]
